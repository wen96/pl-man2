#include "CNetworkServerClient.h"

///////////////////////////////////////////////////////////////////////////////
/// \brief Creates a new client with basic information
///////////////////////////////////////////////////////////////////////////////
CNetworkServerClient::CNetworkServerClient(ENetPeer* p)
    : m_loggined(false),
      m_peer(p),
      m_username()
{
}

///////////////////////////////////////////////////////////////////////////////
/// \brief Returns true if the client is correctly loggined, false otherwise
///
/// \returns (bool) true if client is correctly loggined
///////////////////////////////////////////////////////////////////////////////
bool
CNetworkServerClient::isLoggined() const { return m_loggined; }

///////////////////////////////////////////////////////////////////////////////
/// \brief Sets the logginned status of the client
///
/// \param l    True if client is correctly loggined, false otherwise
///////////////////////////////////////////////////////////////////////////////
void
CNetworkServerClient::setLoggined(bool l) { m_loggined = l; }

///////////////////////////////////////////////////////////////////////////////
/// \brief Returns a constant pointer to the enet peer
///
/// \returns (const ENetPeer *) Pointer to the enet peer
///////////////////////////////////////////////////////////////////////////////
ENetPeer *
CNetworkServerClient::getPeer() { return m_peer; }

///////////////////////////////////////////////////////////////////////////////
/// \brief Sets the username of the client
///
/// \param u    Username of the client
///////////////////////////////////////////////////////////////////////////////
void
CNetworkServerClient::setUsername(std::string u) { m_username = u; }

///////////////////////////////////////////////////////////////////////////////
/// \brief Returns the username of the client
///
/// \returns (const std::string&) Reference to the username
///////////////////////////////////////////////////////////////////////////////
const std::string &
CNetworkServerClient::getUsername() const { return m_username; }
